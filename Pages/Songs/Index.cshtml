@page
@model Raindish.Pages.Songs.IndexModel

@{
    ViewData["Title"] = "Songs";
}

<h1>Songs</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by title:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort"
                asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Songs[0].Title)

                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].ProductionRecording)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].Finished)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.KeySignatureSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Songs[0].KeySignature)
                </a>
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Songs[0].TabsLyricsURL)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].AudioFileURL)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].Genres)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].SongContributors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Songs[0].SongPedals)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Songs) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductionRecording)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Finished)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.KeySignature)
            </td>
             <td>
                @if (!String.IsNullOrEmpty(item.TabsLyricsURL))
                {
                    <a href="@item.TabsLyricsURL" target="_blank">Lyrics</a>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AudioFileURL)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.Id)
            </td>
            <td>
                    @foreach (var genre in item.Genres)
                    {
                        <div>
                        @genre.Name
                        </div>
                    }
            </td>
                <td>
                    @foreach (var info in item.SongContributors)
                    {
                        <div>
                            @info.Contributor.ArtistName
                        </div>
                    }
                </td>
                <td>
                    @foreach (var info in item.SongPedals)
                    {
                        <div>
                            @info.Pedal.Name
                        </div>
                    }
                </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Songs.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Songs.HasNextPage ? "enabled" : "";
}

<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-padIndex="@(Model.Songs.PageIndex - 1)"
    asp-route-currentFilter ="@Model.CurrentFilter"
    class="btn btn-primary @prevDisabled">
Previous
</a>
<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Songs.PageIndex + 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-primary @nextDisabled">
    Next
</a>